package com.example.app1_uc;

import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        // Setting click listener for the Convert button
        findViewById(R.id.convertBt).setOnClickListener(this::onConvertClick);
    }

    public void onConvertClick(View v) {
        try {
            // Retrieving inputs and selections
            Spinner sp1 = (Spinner) findViewById(R.id.spin);
            String choice1 = sp1.getSelectedItem().toString();
            Spinner sp2 = (Spinner) findViewById(R.id.spin1);
            String choice2 = sp2.getSelectedItem().toString();

            EditText ed1 = (EditText) findViewById(R.id.valueInput);
            String inputValue = ed1.getText().toString();

            // Check if the input field is empty
            if (inputValue.isEmpty()) {
                Toast.makeText(this, "Please enter a value to convert", Toast.LENGTH_SHORT).show();
                return;
            }

            // Or if the input is of valid type
            double value1;
            try {
                value1 = Double.parseDouble(inputValue);
            } catch (NumberFormatException e) {
                Toast.makeText(this, "Invalid number format. Please enter a numeric value", Toast.LENGTH_SHORT).show();
                return;
            }

            double value2 = 0;

            // Performing the conversion
            switch (choice1) {
                case "Meter":
                    switch (choice2) {
                        case "Meter":
                            value2 = value1;
                            break;
                        case "Millimeter":
                            value2 = value1 * 1000;
                            break;
                        case "Mile":
                            value2 = value1 * 0.000621371192;
                            break;
                        case "Foot":
                            value2 = value1 * 3.2808399;
                            break;
                        default:
                            Toast.makeText(this, "Invalid conversion selection", Toast.LENGTH_SHORT).show();
                            return;
                    }
                    break;
                case "Millimeter":
                    switch (choice2) {
                        case "Meter":
                            value2 = value1 / 1000;
                            break;
                        case "Millimeter":
                            value2 = value1;
                            break;
                        case "Mile":
                            value2 = value1 * 6.2137e-7;
                            break;
                        case "Foot":
                            value2 = value1 * 0.0032808399;
                            break;
                        default:
                            Toast.makeText(this, "Invalid conversion selection", Toast.LENGTH_SHORT).show();
                            return;
                    }
                    break;
                case "Mile":
                    switch (choice2) {
                        case "Meter":
                            value2 = value1 / 0.000621371192;
                            break;
                        case "Millimeter":
                            value2 = value1 / 6.2137e-7;
                            break;
                        case "Mile":
                            value2 = value1;
                            break;
                        case "Foot":
                            value2 = value1 * 5280;
                            break;
                        default:
                            Toast.makeText(this, "Invalid conversion selection", Toast.LENGTH_SHORT).show();
                            return;
                    }
                    break;
                case "Foot":
                    switch (choice2) {
                        case "Meter":
                            value2 = value1 / 3.2808399;
                            break;
                        case "Millimeter":
                            value2 = value1 * 304.8;
                            break;
                        case "Mile":
                            value2 = value1 * 0.000189393939;
                            break;
                        case "Foot":
                            value2 = value1;
                            break;
                        default:
                            Toast.makeText(this, "Invalid conversion selection", Toast.LENGTH_SHORT).show();
                            return;
                    }
                    break;
                default:
                    Toast.makeText(this, "Invalid base unit selection", Toast.LENGTH_SHORT).show();
                    return;
            }

            // Displaying the converted value in the plainText field 'valueOutput'
            EditText valueOutput = findViewById(R.id.valueOutput);
            valueOutput.setText(String.valueOf(value2));

        } catch (Exception e) {
            // Catching unexpected exceptions
            Toast.makeText(this, "An error occurred: " + e.getMessage(), Toast.LENGTH_SHORT).show();
        }
    }
}
